# Nginx 설정 파일 - 개발/테스트 환경용
# Production 환경에서는 nginx.prod.conf 사용 권장

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로깅
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log info;

    # 기본 성능 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/atom+xml;

    # 업스트림 설정
    upstream fragrance_ai_backend {
        server fragrance_ai:8000;
        keepalive 16;
    }

    # HTTP 서버 (개발 환경)
    server {
        listen 80;
        server_name localhost _;

        # 보안 헤더 (개발용 - 완화된 설정)
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;

        # API 라우팅
        location /api/ {
            proxy_pass http://fragrance_ai_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 개발 환경용 타임아웃 (더 길게 설정)
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # CORS 헤더 (개발 환경용)
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;

            # OPTIONS 프리플라이트 처리
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
        }

        # Root endpoint
        location / {
            proxy_pass http://fragrance_ai_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            proxy_pass http://fragrance_ai_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            access_log off;
        }

        # API 문서 (개발환경에서만 활성화)
        location /docs {
            proxy_pass http://fragrance_ai_backend/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /redoc {
            proxy_pass http://fragrance_ai_backend/redoc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /openapi.json {
            proxy_pass http://fragrance_ai_backend/openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # 메트릭스 엔드포인트 (개발 환경에서는 접근 허용)
        location /metrics {
            proxy_pass http://fragrance_ai_backend/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # 정적 파일 서빙 (존재하는 경우)
        location /static/ {
            alias /var/www/static/;
            expires 1d;
            add_header Cache-Control "public";
        }

        # 404 처리
        error_page 404 /404.html;
        location = /404.html {
            return 404 '{"error": "Not Found", "code": 404, "message": "The requested resource was not found"}';
            add_header Content-Type application/json;
        }

        # 50x 처리
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 500 '{"error": "Internal Server Error", "code": 500, "message": "Something went wrong"}';
            add_header Content-Type application/json;
        }
    }

    # 개발용 모니터링 서버
    server {
        listen 8080;
        server_name localhost;

        location /nginx_status {
            stub_status on;
            access_log off;
        }

        location /health {
            return 200 '{"status": "healthy", "service": "nginx"}';
            add_header Content-Type application/json;
        }
    }
}