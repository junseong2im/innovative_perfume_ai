name: Main CI/CD Pipeline

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]
  workflow_dispatch:
    inputs:
      deploy-environment:
        description: 'Deployment environment'
        required: false
        type: choice
        options:
          - none
          - staging
          - production
        default: none

env:
  PYTHON_VERSION: '3.10'
  NODE_VERSION: '18'

jobs:
  # ========== Lint Stage ==========
  lint:
    name: Code Quality
    uses: ./.github/workflows/reusable/lint.yml
    with:
      python-version: '3.10'
      source-directory: 'fragrance_ai/'
      strict-mode: ${{ github.ref == 'refs/heads/master' }}

  # ========== Test Stage ==========
  test:
    name: Testing
    needs: lint
    uses: ./.github/workflows/reusable/test.yml
    with:
      python-version: '3.10'
      test-directory: 'tests/'
      coverage-threshold: 80
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # ========== Security Stage ==========
  security:
    name: Security
    needs: lint
    uses: ./.github/workflows/reusable/security.yml
    with:
      python-version: '3.10'
      enable-dependency-check: true
      enable-code-scan: true
      enable-secrets-scan: true

  # ========== Build Stage ==========
  build:
    name: Build Application
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build Python package
        run: |
          python -m pip install --upgrade pip build
          python -m build

      - name: Build frontend
        working-directory: ./commerce
        run: |
          npm ci
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist/
            commerce/.next/

  # ========== Docker Stage ==========
  docker:
    name: Build Docker Image
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  # ========== Deploy Stage ==========
  deploy:
    name: Deploy Application
    needs: docker
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/master' &&
      (github.event.inputs.deploy-environment != 'none' || github.event_name == 'workflow_dispatch')

    environment:
      name: ${{ github.event.inputs.deploy-environment || 'staging' }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to environment
        id: deploy
        run: |
          echo "Deploying to ${{ github.event.inputs.deploy-environment || 'staging' }}"
          # Add actual deployment logic here
          echo "url=https://${{ github.event.inputs.deploy-environment || 'staging' }}.fragranceai.com" >> $GITHUB_OUTPUT

      - name: Run smoke tests
        run: |
          # Add smoke test logic here
          echo "Running smoke tests on deployed environment"

      - name: Deployment summary
        run: |
          echo "## Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${{ github.event.inputs.deploy-environment || 'staging' }}" >> $GITHUB_STEP_SUMMARY
          echo "- URL: ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: Success âœ…" >> $GITHUB_STEP_SUMMARY