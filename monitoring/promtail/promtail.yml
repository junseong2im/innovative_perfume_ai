server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Fragrance AI 애플리케이션 로그
  - job_name: fragrance-ai-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: fragrance-ai
          service: application
          __path__: /var/log/fragrance_ai/*.log

    # JSON 로그 파싱
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            logger: logger
            message: message
            category: category
            request_id: context.request_id
            user_id: context.user_id
            endpoint: context.endpoint
            method: context.method
            duration_ms: performance.duration_ms

      - timestamp:
          source: timestamp
          format: RFC3339Nano

      - labels:
          level:
          category:
          service:

      - output:
          source: message

  # 에러 로그 (높은 우선순위)
  - job_name: fragrance-ai-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: fragrance-ai
          service: application
          log_type: error
          __path__: /var/log/fragrance_ai/*_error.log

    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            exception_type: exception.type
            exception_message: exception.message

      - timestamp:
          source: timestamp
          format: RFC3339Nano

      - labels:
          level:
          service:
          log_type:
          exception_type:

  # 보안 로그
  - job_name: fragrance-ai-security
    static_configs:
      - targets:
          - localhost
        labels:
          job: fragrance-ai
          service: security
          log_type: security
          __path__: /var/log/fragrance_ai/*_security.log

    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            event_type: security.event_type
            severity: security.severity
            source_ip: security.source_ip

      - timestamp:
          source: timestamp
          format: RFC3339Nano

      - labels:
          level:
          service:
          log_type:
          event_type:
          severity:

  # 감사 로그 (장기 보관용)
  - job_name: fragrance-ai-audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: fragrance-ai
          service: audit
          log_type: audit
          __path__: /var/log/fragrance_ai/*_audit.log

    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            message: message
            action: action
            resource: resource
            user_id: user_id
            result: result

      - timestamp:
          source: timestamp
          format: RFC3339Nano

      - labels:
          service:
          log_type:
          action:
          result:

  # 성능 로그
  - job_name: fragrance-ai-performance
    static_configs:
      - targets:
          - localhost
        labels:
          job: fragrance-ai
          service: performance
          log_type: performance
          __path__: /var/log/fragrance_ai/*_performance.log

    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            message: message
            operation: operation
            duration_ms: performance.duration_ms
            memory_used_mb: performance.memory_used_mb

      - timestamp:
          source: timestamp
          format: RFC3339Nano

      - labels:
          service:
          log_type:
          operation:

  # Docker 컨테이너 로그
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]

    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'

    pipeline_stages:
      - cri: {}

      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message

      - labels:
          level:
          container:
          logstream: